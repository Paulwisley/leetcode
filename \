#include<stdio.h>
#include<math.h>
#include<stdlib.h>

typedef struct ListNode
{
	int val;
	struct ListNode *next;
}ListNode;

struct ListNode* addTwoNumbers(ListNode *l1, ListNode *l2);
int GetLength(ListNode *s);
int main()
{
	ListNode *l1,*l2;
	ListNode *p,*r, *ans;
	l1 = (ListNode*)malloc(sizeof(ListNode));
	l2 = (ListNode*)malloc(sizeof(ListNode));
	int temp;
	r = l1;
	printf("请输入第一组数（以-1结束输入）：\n");
	while(scanf("%d",&temp)!=EOF)
	{
		p =(ListNode*)malloc(sizeof(ListNode));
		p->val = temp;
		r->next = p;
		r = p;
		if(temp == -1)
		  break;
	}
	r->next = NULL;
	free(p);
	free(r);
	r = (ListNode*)malloc(sizeof(ListNode));
	r = l2;
	printf("请输入第二组数，以 -1 结束输入 \n");
	while(scanf("%d",&temp)!=EOF)
	{
		p =(ListNode*)malloc(sizeof(ListNode));
                p->val = temp;
                r->next = p;
                r = p;
                if(temp == -1)
                  break;	
	}
	r->next = NULL;
	free(p);
	free(r);
	l1 = l1->next;
	while(l1->next)
	{
		printf("%d\n",l1->val);
		l1 = l1->next;
	}
	temp = GetLength(l1);
	printf("%d",temp);	

	/*
	ans = addTwoNumbers(l1,l2);
	ans = ans->next;
	while(ans)
	{
		printf("%d",ans->val);
		ans = ans->next;
	}*/
	return 0;
}

int GetLength(ListNode *s)
{
	int count = 0;
	while(s)
	{
		count++;
		s = s->next;
	}
	return count;
}

int FetchNum(ListNode *s)
{
	int length;
	int ans = 0;
	length = GetLength(s);
	while(length)
	{
		ans += pow(10.0,length-1)*s->val;
		length--;
		s = s->next;
	}
	printf("%d",ans);
	return ans;
}

ListNode* Reverse(ListNode *s)
{
	ListNode *head,*p;
	head = (ListNode*)malloc(sizeof(ListNode));
	head->next = NULL;
	while(s)
	{
		p = s;
		p->next = head->next;
		head->next = p;
		s = s->next;
	}
	return head;
}


ListNode* addTwoNumbers(ListNode *l1, ListNode *l2)
{
	//fetch the num in the list and then put it back to the new list
	int I_sum,I_add1,I_add2;
	int I_value;
	ListNode *head,*p;
	head = (ListNode*)malloc(sizeof(ListNode));
	head->next = NULL;
	//l1 = l1->next;
	I_add1 = FetchNum(Reverse(l1));
	I_add2 = FetchNum(Reverse(l2));
	I_sum = I_add1 + I_add2;
	printf("%d",I_add1);
	while(I_sum)
	{	
		I_value = I_sum % 10;
		p = (ListNode*)malloc(sizeof(ListNode));
		p->val = I_value;
		p->next = head->next;
		head->next = p;
		I_sum = I_sum / 10 ;	
	}
	
	return head;
}
